// ‡¶≤‡ßã‡¶ï‡¶æ‡¶≤ ‡¶∏‡ßç‡¶ü‡ßã‡¶∞‡ßá‡¶ú ‡¶•‡ßá‡¶ï‡ßá ‡¶°‡¶æ‡¶ü‡¶æ ‡¶≤‡ßã‡¶°
let lists = JSON.parse(localStorage.getItem("bazarLists")) || [];

// ‡¶°‡¶æ‡¶ü‡¶æ ‡¶∏‡ßá‡¶≠ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
function saveData() {
  localStorage.setItem("bazarLists", JSON.stringify(lists));
}

// ‡¶∏‡¶¨ ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶∞‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
function renderLists() {
  const listsDiv = document.getElementById("lists");
  listsDiv.innerHTML = "";

  lists.forEach((list, listIndex) => {
    let listDiv = document.createElement("div");
    listDiv.className = "list";

    // ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ
    let title = document.createElement("h2");
    title.innerText = list.name;

    // ‡¶™‡ßç‡¶∞‡ßã‡¶°‡¶æ‡¶ï‡ßç‡¶ü ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶∞‡ßç‡¶Æ
    let productForm = document.createElement("div");
    productForm.innerHTML = `
      <input type="text" placeholder="‡¶™‡¶£‡ßç‡¶Ø‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ" id="pname-${listIndex}">
      <input type="date" id="pdate-${listIndex}">
      <input type="number" placeholder="‡¶ï‡ßá‡¶ú‡¶ø/‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£" id="pqty-${listIndex}">
      <input type="number" placeholder="‡¶ü‡¶æ‡¶ï‡¶æ" id="pprice-${listIndex}">
      <button onclick="addProduct(${listIndex})">‚ûï ‡¶™‡ßç‡¶∞‡ßã‡¶°‡¶æ‡¶ï‡ßç‡¶ü</button>
    `;

    // ‡¶™‡ßç‡¶∞‡ßã‡¶°‡¶æ‡¶ï‡ßç‡¶ü ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü
    let productsDiv = document.createElement("div");
    list.products.forEach((product, productIndex) => {
      let p = document.createElement("div");
      p.className = "product";
      p.innerHTML = `
        <span>
          ${product.name} (${product.qty} ‡¶ï‡ßá‡¶ú‡¶ø) - ${product.price}‡ß≥
        </span>
        <small>${product.date}</small>
        <button onclick="deleteProduct(${listIndex}, ${productIndex})">üóëÔ∏è</button>
      `;
      productsDiv.appendChild(p);
    });

    // ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶¨‡¶æ‡¶ü‡¶®
    let deleteListBtn = document.createElement("button");
    deleteListBtn.innerText = "‚ùå ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶Æ‡ßÅ‡¶õ‡ßÅ‡¶®";
    deleteListBtn.onclick = () => deleteList(listIndex);

    // DOM ‡¶è ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ
    listDiv.appendChild(title);
    listDiv.appendChild(productForm);
    listDiv.appendChild(productsDiv);
    listDiv.appendChild(deleteListBtn);

    listsDiv.appendChild(listDiv);
  });
}

// ‡¶®‡¶§‡ßÅ‡¶® ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ
function addList() {
  let name = document.getElementById("listName").value;
  if (name.trim() === "") return alert("‡¶≤‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®!");

  lists.push({ name: name, products: [] });
  saveData();
  renderLists();

  document.getElementById("listName").value = "";
}

// ‡¶®‡¶§‡ßÅ‡¶® ‡¶™‡ßç‡¶∞‡ßã‡¶°‡¶æ‡¶ï‡ßç‡¶ü ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ
function addProduct(listIndex) {
  let name = document.getElementById(`pname-${listIndex}`).value;
  let date = document.getElementById(`pdate-${listIndex}`).value;
  let qty = document.getElementById(`pqty-${listIndex}`).value;
  let price = document.getElementById(`pprice-${listIndex}`).value;

  if (!name || !date || !qty || !price) return alert("‡¶∏‡¶¨ ‡¶§‡¶•‡ßç‡¶Ø ‡¶™‡ßÇ‡¶∞‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®!");

  lists[listIndex].products.push({ name, date, qty, price });
  saveData();
  renderLists();
}

// ‡¶™‡ßç‡¶∞‡ßã‡¶°‡¶æ‡¶ï‡ßç‡¶ü ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡¶æ
function deleteProduct(listIndex, productIndex) {
  if (confirm("‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡¶ø ‡¶è‡¶á ‡¶™‡ßç‡¶∞‡ßã‡¶°‡¶æ‡¶ï‡ßç‡¶ü ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶®?")) {
    lists[listIndex].products.splice(productIndex, 1);
    saveData();
    renderLists();
  }
}

// ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡¶æ
function deleteList(listIndex) {
  if (confirm("‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡¶ø ‡¶è‡¶á ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶®?")) {
    lists.splice(listIndex, 1);
    saveData();
    renderLists();
  }
}

// ======================
// üì§ Backup System
// ======================
const APP_STORAGE_PREFIX = "bazarlist";

function collectAllAppData() {
  const dump = { meta: {}, data: {} };
  dump.meta.exportedAt = new Date().toISOString();
  dump.meta.app = "BazarList";
  dump.meta.version = 1;

  // localStorage ‡¶•‡ßá‡¶ï‡ßá ‡¶°‡¶æ‡¶ü‡¶æ ‡¶ï‡¶æ‡¶≤‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ
  for (let i = 0; i < localStorage.length; i++) {
    const k = localStorage.key(i);
    if (k && k.toLowerCase().includes(APP_STORAGE_PREFIX)) {
      dump.data[k] = localStorage.getItem(k);
    }
  }
  return dump;
}

function downloadJSON(obj, filename) {
  const blob = new Blob([JSON.stringify(obj, null, 2)], { type: "application/json" });
  const url = URL.createObjectURL(blob);
  const a = document.createElement("a");
  a.href = url;
  a.download = filename;
  document.body.appendChild(a);
  a.click();
  a.remove();
  setTimeout(() => URL.revokeObjectURL(url), 1000);
}

function restoreAllAppData(dump) {
  if (!dump || !dump.data || typeof dump.data !== "object") {
    alert("‚ùå Invalid backup file.");
    return false;
  }
  // ‡¶™‡ßÅ‡¶∞‡ßã‡¶®‡ßã ‡¶°‡¶æ‡¶ü‡¶æ ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶´‡ßá‡¶≤‡¶æ
  Object.entries(dump.data).forEach(([k, v]) => {
    localStorage.setItem(k, v);
  });

  localStorage.setItem("bazarlist-last-restore-at", new Date().toISOString());
  return true;
}

// Backup export
document.getElementById("exportBtn")?.addEventListener("click", () => {
  const data = collectAllAppData();
  const date = new Date().toISOString().slice(0, 10);
  downloadJSON(data, `BazarList-backup-${date}.json`);
});

// Backup import
document.getElementById("importFile")?.addEventListener("change", async (e) => {
  const file = e.target.files?.[0];
  if (!file) return;

  try {
    const text = await file.text();
    const json = JSON.parse(text);
    const ok = restoreAllAppData(json);
    if (ok) {
      alert("‚úÖ Backup restored! The app will reload.");
      location.reload();
    }
  } catch (err) {
    console.error(err);
    alert("‚ùå Could not restore. Please select a valid backup JSON file.");
  } finally {
    e.target.value = ""; // reset
  }
});

// ======================

// ‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡¶¨‡¶æ‡¶∞ ‡¶∞‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞
renderLists();